{"version":3,"sources":["utils.js","context.js","components/SkillsForm.js","components/Stage.js","components/WelcomePage.js","components/StatusBar.js","App.js","index.js"],"names":["capitalize","string","charAt","toUpperCase","slice","tierArray","Context","createContext","AppContextProvider","children","useState","currentScore","setCurrentScore","specialty","subSpecialty","selectedSpecialty","setSelectedSpecialty","team","tierOne","tierTwo","tierThree","tierFour","tierFive","craft","selectedSkills","setSelectedSkills","submitNewSkills","skillsObject","tier","newSkillsState","concat","length","providerValue","useMemo","actions","Provider","value","SkillsForm","props","useLocation","setLocation","useContext","AppContext","skills","setSkills","data","currentTier","craftData","console","log","handleCheckbox","newSkill","type","otherType","indexOf","newSkills","filter","skill","handleFormSubmit","a","teamSkills","map","id","name","checked","onChange","htmlFor","onClick","Stage","useRoute","match","params","tierData","WelcomePage","router","useRouter","location","setSpecialty","setSubSpecialty","handleSubmit","onSubmit","StatusBar","App","base","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bc14100.chunk.js","sourcesContent":["export const capitalize = (string) =>\n  string.charAt(0).toUpperCase() + string.slice(1);\n\nexport const tierArray = ['one', 'two', 'three', 'four', 'five'];\n","import PropTypes from 'prop-types';\nimport React, { createContext, useState, useMemo } from 'react';\nimport { capitalize, tierArray } from './utils';\n\nconst Context = createContext();\n\nexport const AppContextProvider = ({ children }) => {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [selectedSpecialty, setSelectedSpecialty] = useState({\n    specialty: '',\n    subSpecialty: '',\n  });\n\n  const [selectedSkills, setSelectedSkills] = useState({\n    team: {\n      tierOne: [],\n      tierTwo: [],\n      tierThree: [],\n      tierFour: [],\n      tierFive: [],\n    },\n    craft: {\n      tierOne: [],\n      tierTwo: [],\n      tierThree: [],\n      tierFour: [],\n      tierFive: [],\n    },\n  });\n\n  const submitNewSkills = (skillsObject, tier) => {\n    const newSkillsState = {\n      team: {\n        ...selectedSkills.team,\n        [`tier${capitalize(tierArray[tier])}`]: [...skillsObject.team],\n      },\n      craft: {\n        ...selectedSkills.craft,\n        [`tier${capitalize(tierArray[tier])}`]: [...skillsObject.craft],\n      },\n    };\n\n    setSelectedSkills(newSkillsState);\n    setCurrentScore(\n      currentScore +\n        skillsObject.team.concat(skillsObject.craft).length * (tier + 1)\n    );\n  };\n\n  const providerValue = useMemo(\n    () => ({\n      currentScore,\n      selectedSkills,\n      selectedSpecialty,\n      actions: {\n        submitNewSkills,\n        setSelectedSpecialty,\n      },\n    }),\n    [\n      currentScore,\n      selectedSkills,\n      selectedSpecialty,\n      submitNewSkills,\n      setSelectedSpecialty,\n    ]\n  );\n\n  return <Context.Provider value={providerValue}>{children}</Context.Provider>;\n};\n\nAppContextProvider.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Context;\n","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'wouter';\nimport AppContext from '../context';\nimport { tierArray } from '../utils';\n\nconst SkillsForm = (props) => {\n  const [, setLocation] = useLocation();\n  const {\n    selectedSpecialty,\n    actions: { submitNewSkills },\n  } = useContext(AppContext);\n  const [skills, setSkills] = useState({ craft: [], team: [] });\n  const { data, currentTier } = props;\n\n  const craftData =\n    currentTier > 1 && selectedSpecialty.specialty === 'engineering'\n      ? data.craft[selectedSpecialty.specialty][selectedSpecialty.subSpecialty]\n      : data.craft[selectedSpecialty.specialty];\n  console.log(craftData);\n\n  const handleCheckbox = (newSkill, type) => {\n    const otherType = type === 'craft' ? 'team' : 'craft';\n\n    if (skills[type].indexOf(newSkill) > -1) {\n      const newSkills = skills[type].filter((skill) => skill !== newSkill);\n      setSkills({\n        [type]: [...newSkills],\n        [otherType]: [...skills[otherType]],\n      });\n      return;\n    }\n\n    setSkills({\n      [otherType]: [...skills[otherType]],\n      [type]: skills[type].concat(newSkill),\n    });\n  };\n\n  const handleFormSubmit = async () => {\n    await submitNewSkills(skills, currentTier);\n    setSkills({ craft: [], team: [] });\n    setLocation(`/stage-${tierArray[currentTier + 1]}`);\n  };\n\n  return (\n    <div>\n      <h2>Team Skills</h2>\n      {data.teamSkills.map((skill) => (\n        <div key={skill}>\n          <input\n            type=\"checkbox\"\n            id={skill}\n            name={skill}\n            checked={skills.team.indexOf(skill) > -1}\n            onChange={() => handleCheckbox(skill, 'team')}\n          />\n          <label htmlFor={skill}>{skill}</label>\n        </div>\n      ))}\n      <h2>Craft</h2>\n      {craftData.map((skill) => (\n        <div key={skill}>\n          <input\n            type=\"checkbox\"\n            id={skill}\n            name={skill}\n            checked={skills.craft.indexOf(skill) > -1}\n            onChange={() => handleCheckbox(skill, 'craft')}\n          />\n          <label htmlFor={skill}>{skill}</label>\n        </div>\n      ))}\n      <button onClick={handleFormSubmit}>Next</button>\n    </div>\n  );\n};\n\nexport default SkillsForm;\n\nSkillsForm.propTypes = {\n  data: PropTypes.shape({\n    teamSkills: PropTypes.array,\n    craft: PropTypes.shape({\n      design: PropTypes.array,\n      engineering: PropTypes.oneOfType([\n        PropTypes.array,\n        PropTypes.shape({\n          frontend: PropTypes.array,\n          backendApp: PropTypes.array,\n          cloudInfra: PropTypes.array,\n        }),\n      ]),\n    }),\n  }),\n  currentTier: PropTypes.number,\n};\n","import React from 'react';\nimport { useRoute } from 'wouter';\nimport { capitalize, tierArray } from '../utils';\nimport data from '../criteria-data.json';\nimport SkillsForm from './SkillsForm';\n\nconst Stage = () => {\n  const [match, params] = useRoute('/stage-:id');\n\n  const currentTier = match && tierArray.indexOf(params.id);\n  const tierData = match && data[`tier${capitalize(params.id)}`];\n\n  return (\n    match && (\n      <div>\n        <h2>Stage {capitalize(params.id)}</h2>\n        <SkillsForm data={tierData} currentTier={currentTier} />\n      </div>\n    )\n  );\n};\n\nexport default Stage;\n","import React, { useState, useContext } from 'react';\nimport { useLocation, useRoute, useRouter } from 'wouter';\nimport AppContext from '../context';\n\nconst WelcomePage = () => {\n  // eslint-disable-next-line\n  const router = useRouter();\n  // eslint-disable-next-line no-undef\n  const [match] = useRoute('/');\n  const [location, setLocation] = useLocation();\n  console.log(location);\n  const {\n    actions: { setSelectedSpecialty },\n  } = useContext(AppContext);\n  const [specialty, setSpecialty] = useState('');\n  const [subSpecialty, setSubSpecialty] = useState('');\n\n  console.log(router);\n\n  const handleSubmit = async () => {\n    await setSelectedSpecialty({\n      specialty,\n      subSpecialty,\n    });\n    setLocation('/stage-one');\n  };\n\n  return (\n    match && (\n      <form onSubmit={handleSubmit}>\n        <>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"design\"\n              checked={specialty === 'design'}\n              onChange={() => setSpecialty('design')}\n            />\n            Design\n          </label>\n          <label>\n            <input\n              type=\"radio\"\n              value=\"engineering\"\n              checked={specialty === 'engineering'}\n              onChange={() => setSpecialty('engineering')}\n            />\n            Engineering\n          </label>\n        </>\n        {specialty === 'engineering' && (\n          <>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"frontend\"\n                checked={subSpecialty === 'frontend'}\n                onChange={() => setSubSpecialty('frontend')}\n              />\n              Frontend\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"backendApp\"\n                checked={subSpecialty === 'backendApp'}\n                onChange={() => setSubSpecialty('backendApp')}\n              />\n              Backend App\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                value=\"cloudInfra\"\n                checked={subSpecialty === 'cloudInfra'}\n                onChange={() => setSubSpecialty('cloudInfra')}\n              />\n              Cloud Infra\n            </label>\n          </>\n        )}\n        <button type=\"submit\">Start Assessment</button>\n      </form>\n    )\n  );\n};\n\nexport default WelcomePage;\n","import React, { useContext } from 'react';\nimport AppContext from '../context';\n\nconst StatusBar = () => {\n  const { currentScore } = useContext(AppContext);\n  return <div>Current Score: {currentScore}</div>;\n};\n\nexport default StatusBar;\n","import React from 'react';\nimport { Router } from 'wouter';\nimport { AppContextProvider } from './context';\nimport Stage from './components/Stage';\nimport WelcomePage from './components/WelcomePage';\nimport StatusBar from './components/StatusBar';\n\nfunction App() {\n  return (\n    <AppContextProvider>\n      {/* eslint-disable-next-line no-undef */}\n      <Router base={process.env.PUBLIC_URL}>\n        <div>\n          <StatusBar />\n          <WelcomePage />\n          <Stage />\n        </div>\n      </Router>\n    </AppContextProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}